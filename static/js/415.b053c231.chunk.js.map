{"version":3,"file":"static/js/415.b053c231.chunk.js","mappings":"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","sources":["components/MovieList/MovieItem.jsx","components/MovieList/MovieList.jsx","components/Section.jsx","pages/Home.jsx","service/api.js","utils/getImage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getPosterURL } from 'utils';\n\nexport const MovieItem = ({ id, poster_path, title, overview }) => {\n  const location = useLocation();\n\n  return (\n    <li\n      className=\"rounded-xl bg-slate-200 p-2 shadow-md\n          hover:-translate-y-1 focus-within:-translate-y-1 transition-transform\n          motion-reduce:transition-none\"\n    >\n      <Link to={`/movies/${id}`} state={{ from: location }} className=\"flex\">\n        <img\n          srcSet={\n            poster_path\n              ? `${getPosterURL('w185', poster_path)} 1x,\n                  ${getPosterURL('w342', poster_path)} 2x`\n              : 'https://placehold.co/185x278?text=No+Poster'\n          }\n          src={\n            poster_path\n              ? getPosterURL('w185', poster_path)\n              : 'https://placehold.co/185x278?text=No+Poster'\n          }\n          width={92}\n          height={138}\n          alt={poster_path ? `Poster for ${title}` : 'No poster'}\n          className=\"object-contain mr-4 rounded-lg w-[92px]\"\n        />\n\n        <div>\n          <h3 className=\"text-lg font-medium text-slate-600\">{title}</h3>\n          <p className=\"line-clamp-3\">{overview}</p>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { MovieItem } from './MovieItem';\n\nexport const MovieList = ({ movies = [] }) => {\n  return (\n    <ul className=\"grid md:grid-cols-2 xl:grid-cols-3 gap-4\">\n      {movies.map(({ id, poster_path, title, overview }) => (\n        <MovieItem\n          key={id}\n          id={id}\n          poster_path={poster_path}\n          title={title}\n          overview={overview}\n        />\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <section className=\"py-6\">\n      <div className=\"container\">\n        {title && (\n          <h2 className=\"text-2xl font-semibold text-slate-800 mb-4\">\n            {title}\n          </h2>\n        )}\n        {children}\n      </div>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport { Section } from 'components/Section';\nimport { toast } from 'react-toastify';\nimport { fetchTrendingMovies } from 'service/api';\nimport { MovieList } from 'components/MovieList';\nimport { Spinner } from 'components/Spinner';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    const updateMovieList = async () => {\n      try {\n        const movies = await fetchTrendingMovies();\n\n        setMovies(movies.results);\n      } catch (error) {\n        console.error(error);\n        toast.error(error.message);\n        setMovies([]);\n      }\n    };\n\n    updateMovieList();\n  }, []);\n\n  return (\n    <Section title=\"Trending today\">\n      {movies ? <MovieList movies={movies} /> : <Spinner />}\n    </Section>\n  );\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYjE3NzU3ZjU2ZDg1NmM5YzE2MmE1OWEzZWZlMmY5MyIsInN1YiI6IjY0NzhkNWZjOWI2ZTQ3MDBkZThlOTBlZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BE22YVTai34Dh5C1jSxEZ2DzzjnxJfKFgEIpWS2JFcI',\n  },\n};\n\nexport const fetchTrendingMovies = () =>\n  fetch(`${BASE_URL}/trending/movie/day?language=en-US`, options)\n    .then(response => {\n      checkResponse(response);\n\n      return response;\n    })\n    .then(response => response.json());\n\nexport const fetchMoviesByQuery = async query => {\n  const params = new URLSearchParams({\n    query,\n    include_adult: false,\n    language: 'en-US',\n    page: 1,\n  });\n\n  const response = await fetch(`${BASE_URL}/search/movie?${params}`, options);\n\n  checkResponse(response);\n\n  return await response.json();\n};\n\nexport const fetchMovieDetails = async id =>\n  fetch(`${BASE_URL}/movie/${id}?language=en_US`, options)\n    .then(response => {\n      checkResponse(response);\n\n      return response;\n    })\n    .then(response => response.json());\n\nexport const fetchMovieCast = async id =>\n  fetch(`${BASE_URL}/movie/${id}/credits?language=en_US`, options)\n    .then(response => {\n      checkResponse(response);\n\n      return response;\n    })\n    .then(response => response.json());\n\nexport const fetchMovieReviews = async id =>\n  fetch(`${BASE_URL}/movie/${id}/reviews?language=en-US&page=1`, options)\n    .then(response => {\n      checkResponse(response);\n\n      return response;\n    })\n    .then(response => response.json());\n\nconst checkResponse = response => {\n  if (!response.ok) {\n    let err = new Error(`HTTP status: ${response.status}`);\n\n    err.response = response;\n    err.status = response.status;\n\n    throw err;\n  }\n};\n","const poster_sizes = [\n  'w92',\n  'w154',\n  'w185',\n  'w342',\n  'w500',\n  'w780',\n  'original',\n];\n\nconst profile_sizes = ['w45', 'w185', 'h632', 'original'];\n\nconst BASE_URL = 'https://image.tmdb.org/t/p';\n\n/**\n * Get complete URL of the poster image\n * @param {('w92'|'w154'|'w185'|'w342'|'w500'|'w700'|'original')} size Size of the poster image\n * @param {string} url URL of the poster image\n * @returns Complete poster image URL\n */\nexport const getPosterURL = (size, url) => {\n  if (!poster_sizes.includes(size)) return `${BASE_URL}/original${url}`;\n\n  return `${BASE_URL}/${size}${url}`;\n};\n\n/**\n * Get complete URL of the profile image\n * @param {('w45'|'w185'|'h632'|'original')} size Size of the profile image\n * @param {string} url URL of the profile image\n * @returns Complete profile image URL\n */\nexport const getProfileURL = (size, url) => {\n  if (!profile_sizes.includes(size)) return `${BASE_URL}/original${url}`;\n\n  return `${BASE_URL}/${size}${url}`;\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["MovieItem","id","poster_path","title","overview","location","useLocation","className","to","state","from","srcSet","getPosterURL","src","width","height","alt","MovieList","movies","map","Section","children","useState","setMovies","useEffect","updateMovieList","fetchTrendingMovies","results","console","error","toast","message","BASE_URL","options","method","headers","accept","Authorization","fetch","then","response","checkResponse","json","fetchMoviesByQuery","query","params","URLSearchParams","include_adult","language","page","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","ok","err","Error","status","poster_sizes","profile_sizes","size","url","includes","getProfileURL","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined"],"sourceRoot":""}