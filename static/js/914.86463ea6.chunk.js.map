{"version":3,"file":"static/js/914.86463ea6.chunk.js","mappings":"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","sources":["components/SubSection.jsx","components/CastList/CastItem.jsx","components/CastList/CastList.jsx","pages/Cast.jsx","service/api.js","utils/getImage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const SubSection = ({ title, children }) => {\n  return (\n    <section>\n      {title && (\n        <h2 className=\"text-xl font-medium text-slate-600 mb-2\">{title}</h2>\n      )}\n\n      {children}\n    </section>\n  );\n};\n\nSubSection.propTypes = {\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { getProfileURL } from 'utils';\n\nexport const CastItem = ({ profile_path, name, character }) => {\n  return (\n    <li className=\"flex gap-1 bg-slate-200 rounded-md relative overflow-hidden\">\n      {profile_path ? (\n        <img\n          srcSet={`${getProfileURL('w185', profile_path)} 1x,\n                          ${getProfileURL('h632', profile_path)} 2x`}\n          src={getProfileURL('w185', profile_path)}\n          alt=\"Profile poster\"\n          width={185}\n          height={278}\n          className=\"w-full object-cover rounded-md\"\n        />\n      ) : (\n        <img\n          src=\"https://placehold.co/185x278?text=No+Image\"\n          alt=\"No Profile poster\"\n          width={185}\n          height={278}\n          className=\"w-full object-cover rounded-md\"\n        />\n      )}\n\n      <div\n        className=\"absolute bg-gradient-to-t bottom-0 left-0\n              from-slate-800/50 via-slate-800/50 to-transparent\n                text-white p-2 w-full\"\n      >\n        <h3 className=\"text-lg\">{name}</h3>\n        <p>Character: {character}</p>\n      </div>\n    </li>\n  );\n};\n\nCastItem.propTypes = {\n  profile_path: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { CastItem } from './CastItem';\n\nexport const CastList = ({ cast = [] }) => {\n  return (\n    <ul className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-8 gap-2 \">\n      {cast.map(({ id, profile_path, name, character }) => (\n        <CastItem\n          key={id}\n          profile_path={profile_path}\n          name={name}\n          character={character}\n        />\n      ))}\n    </ul>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Spinner } from 'components/Spinner';\nimport { SubSection } from 'components/SubSection';\nimport { fetchMovieCast } from 'service/api';\nimport { CastList } from 'components/CastList';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const updateMovieCast = async () => {\n      try {\n        const movieCredits = await fetchMovieCast(movieId);\n        setCredits(movieCredits);\n      } catch (error) {\n        console.error(error);\n        toast.error(error.message);\n      }\n    };\n\n    updateMovieCast();\n  }, [movieId]);\n\n  if (credits === null) return <Spinner />;\n\n  const { cast } = credits;\n\n  return (\n    <SubSection title=\"Cast\">\n      {cast.length ? (\n        <CastList cast={cast} />\n      ) : (\n        <p className=\"text-xl\">It seems but there is no one here ü§∑‚Äç‚ôÄÔ∏è</p>\n      )}\n    </SubSection>\n  );\n};\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYjE3NzU3ZjU2ZDg1NmM5YzE2MmE1OWEzZWZlMmY5MyIsInN1YiI6IjY0NzhkNWZjOWI2ZTQ3MDBkZThlOTBlZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BE22YVTai34Dh5C1jSxEZ2DzzjnxJfKFgEIpWS2JFcI',\n  },\n};\n\nexport const fetchTrendingMovies = () =>\n  fetch(`${BASE_URL}/trending/movie/day?language=en-US`, options)\n    .then(response => {\n      checkResponse(response);\n\n      return response;\n    })\n    .then(response => response.json());\n\nexport const fetchMoviesByQuery = async query => {\n  const params = new URLSearchParams({\n    query,\n    include_adult: false,\n    language: 'en-US',\n    page: 1,\n  });\n\n  const response = await fetch(`${BASE_URL}/search/movie?${params}`, options);\n\n  checkResponse(response);\n\n  return await response.json();\n};\n\nexport const fetchMovieDetails = async id =>\n  fetch(`${BASE_URL}/movie/${id}?language=en_US`, options)\n    .then(response => {\n      checkResponse(response);\n\n      return response;\n    })\n    .then(response => response.json());\n\nexport const fetchMovieCast = async id =>\n  fetch(`${BASE_URL}/movie/${id}/credits?language=en_US`, options)\n    .then(response => {\n      checkResponse(response);\n\n      return response;\n    })\n    .then(response => response.json());\n\nexport const fetchMovieReviews = async id =>\n  fetch(`${BASE_URL}/movie/${id}/reviews?language=en-US&page=1`, options)\n    .then(response => {\n      checkResponse(response);\n\n      return response;\n    })\n    .then(response => response.json());\n\nconst checkResponse = response => {\n  if (!response.ok) {\n    let err = new Error(`HTTP status: ${response.status}`);\n\n    err.response = response;\n    err.status = response.status;\n\n    throw err;\n  }\n};\n","const poster_sizes = [\n  'w92',\n  'w154',\n  'w185',\n  'w342',\n  'w500',\n  'w780',\n  'original',\n];\n\nconst profile_sizes = ['w45', 'w185', 'h632', 'original'];\n\nconst BASE_URL = 'https://image.tmdb.org/t/p';\n\n/**\n * Get complete URL of the poster image\n * @param {('w92'|'w154'|'w185'|'w342'|'w500'|'w700'|'original')} size Size of the poster image\n * @param {string} url URL of the poster image\n * @returns Complete poster image URL\n */\nexport const getPosterURL = (size, url) => {\n  if (!poster_sizes.includes(size)) return `${BASE_URL}/original${url}`;\n\n  return `${BASE_URL}/${size}${url}`;\n};\n\n/**\n * Get complete URL of the profile image\n * @param {('w45'|'w185'|'h632'|'original')} size Size of the profile image\n * @param {string} url URL of the profile image\n * @returns Complete profile image URL\n */\nexport const getProfileURL = (size, url) => {\n  if (!profile_sizes.includes(size)) return `${BASE_URL}/original${url}`;\n\n  return `${BASE_URL}/${size}${url}`;\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["SubSection","title","children","className","CastItem","profile_path","name","character","srcSet","getProfileURL","src","alt","width","height","CastList","cast","map","id","useState","credits","setCredits","movieId","useParams","useEffect","updateMovieCast","fetchMovieCast","movieCredits","console","error","toast","message","Spinner","length","BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","fetch","then","response","checkResponse","json","fetchMoviesByQuery","query","params","URLSearchParams","include_adult","language","page","fetchMovieDetails","fetchMovieReviews","ok","err","Error","status","poster_sizes","profile_sizes","getPosterURL","size","url","includes","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined"],"sourceRoot":""}